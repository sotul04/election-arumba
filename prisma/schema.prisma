// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String
    email         String    @unique
    emailVerified DateTime?
    image         String?
    password      String?
    hasProfile    Boolean   @default(false)
    hasVoted      Boolean   @default(false)
    role          Role      @default(VOTER)
    major         String?
    university    String?
    generation    Int?
    waNumber      String?
    lineId        String?
    accounts      Account[]
    sessions      Session[]
    voting        Vote[]
}

enum Role {
    VOTER
    ADMIN
}

enum Position {
    KETUA
    BENDAHARA
    SEKRETARIS
    KADIV_INTERNAL
    KADIV_HUMAS
    KADIV_INFORMASI_DAN_KREASI
    KADIV_EVENTS
}

model Candidate {
    id         Int      @id @default(autoincrement())
    fullname   String
    university String
    generation String
    image      String
    position   Position

    voters Vote[]
}

model Vote {
    id          Int      @id @default(autoincrement())
    voterId     String
    candidateId Int?
    position    Position
    createdAt   DateTime @default(now()) @db.Timestamptz()

    voter     User       @relation(fields: [voterId], references: [id], onDelete: Cascade)
    candidate Candidate? @relation(fields: [candidateId], references: [id], onDelete: SetNull)
}

model Timeline {
    start DateTime @db.Timestamptz()
    end   DateTime @db.Timestamptz()

    @@unique([start, end])
}
